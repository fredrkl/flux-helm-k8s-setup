# Splunk Connect for Kubernetes is a umbrella chart for three charts
# * splunk-kubernetes-logging
# * splunk-kubernetes-objects
# * splunk-kubernetes-metrics

# Use global configurations for shared configurations between sub-charts.
# Supported global configurations:
# Values defined here are the default values.
global:
  logLevel: info
  splunk:
    hec:
      # host is required and should be provided by user
      host:
      # port to HEC, optional, default 8088
      port:
      # token is required and should be provided by user
      token:
      # protocol has two options: "http" and "https", default is "https"
      # For self signed certificate leave this field blank
      protocol:
      # Allow specifying the HEC endpoint to use, default is "/services/collector"
      endpoint:
      # Instead of providing host, port, and protocol, you can provide full url for splunk. For example: https://mydomain.com:8088/apps/splunk
      fullUrl:
      # indexName tells which index to use, this is optional. If it's not present, will use "main".
      indexName:
## Enabling splunk-kubernetes-logging will install the `splunk-kubernetes-logging` chart to a kubernetes
## cluster to collect logs generated in the cluster to a Splunk indexer/indexer cluster.
splunk-kubernetes-logging:
  enabled: true
  # logLevel is to set log level of the Splunk log collector. Available values are:
  # * trace
  # * debug
  # * info (default)
  # * warn
  # * error
  logLevel:

  # Namespace to deploy agent in (Optional: Will default to release namespace)
  namespace:

  # This is can be used to exclude verbose logs including various system and Helm/Tiller related logs.
  fluentd:
    # path of logfiles, default /var/log/containers/*.log
    path: /var/log/containers/*.log
    # paths of logfiles to exclude. object type is array as per fluentd specification:
    # https://docs.fluentd.org/input/tail#exclude_path
    exclude_path:
    #  - /var/log/containers/kube-svc-redirect*.log
    #  - /var/log/containers/tiller*.log
    #  - /var/log/containers/*_kube-system_*.log (to exclude `kube-system` namespace)

  # Configurations for container logs
  containers:
    # Path to root directory of container logs
    path: /var/log
    # Final volume destination of container log symlinks
    pathDest: /var/lib/docker/containers
    # Log format type, "json" or "cri"
    logFormatType: json
    # Specify the logFormat for "cri" logFormatType - provide time format
    # For example "%Y-%m-%dT%H:%M:%S.%N%:z" for openshift, "%Y-%m-%dT%H:%M:%S.%NZ" for IBM IKS
    # Default for "cri": "%Y-%m-%dT%H:%M:%S.%N%:z"
    # For "json", the log format cannot be changed: "%Y-%m-%dT%H:%M:%S.%NZ"
    logFormat:
    # Specify the interval of refreshing the list of watch file.
    refreshInterval:
    # Boolean to whether to remove blank events or not
    removeBlankEvents: true
    # Boolean if true, uses local time. UTC. Otherwise, UTC is used
    localTime: false

  # Enriches log record with kubernetes data
  k8sMetadata:
    # Pod labels to collect
    podLabels:
      - app
      - k8s-app
      - release
    watch: true
    cache_ttl: 3600

  sourcetypePrefix: "kube"

  rbac:
    # Specifies whether RBAC resources should be created.
    # This should be set to `false` if either:
    # a) RBAC is not enabled in the cluster, or
    # b) you want to create RBAC resources by yourself.
    create: true
    # If you are on OpenShift and you want to run the a privileged pod
    # you need to have a ClusterRoleBinding for the system:openshift:scc:privileged
    # ClusterRole. Set to `true` to create the ClusterRoleBinding resource
    # for the ServiceAccount.
    openshiftPrivilegedSccBinding: false

  serviceAccount:
    # Specifies whether a ServiceAccount should be created
    create: true
    # The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template
    name:

  podSecurityPolicy:
    # Specifies whether Pod Security Policy resources should be created.
    # This should be set to `false` if either:
    # a) Pod Security Policies is not enabled in the cluster, or
    # b) you want to create Pod Security Policy resources by yourself.
    create: false
    # Specifies whether AppArmor profile should be applied.
    # if set to true, this will add two annotations to PodSecurityPolicy:
    # apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    # apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
    # set to false if AppArmor is not available
    apparmor_security: true
    # apiGroup can be set to "extensions" for Kubernetes < 1.10.
    apiGroup: policy

splunk-kubernetes-objects:
  enabled: false
splunk-kubernetes-metrics:
  enabled: false